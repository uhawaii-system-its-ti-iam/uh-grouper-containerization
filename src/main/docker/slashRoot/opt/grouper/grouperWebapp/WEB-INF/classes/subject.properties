#
# Subject configuration for UoH Grouper 2.5+
#

# The subject properties uses Grouper Configuration Overlays (documented on wiki)
# By default the configuration is read from subject.base.properties
# (which should not be edited), and the subject.properties overlays
# the base settings.  See the subject.base.properties for the possible
# settings that can be applied to the subject.properties
#
# Enter the location of the sources.xml.  Must start with classpath: or file:
# blank means dont use sources.xml, use subject.properties
# default is: classpath:sources.xml
# e.g. file:/dir1/dir2/sources.xml
subject.sources.xml.location = 


#########################################
## Configuration for source id: UH core LDAP Subject source
## Source configName: UH_core_LDAP
#########################################
subjectApi.source.UH_core_LDAP.id = UH core LDAP

# this is a friendly name for the source
subjectApi.source.UH_core_LDAP.name = UH LDAP

# type is not used all that much.  Can have multiple types, comma separate.  Can be person, group, application
subjectApi.source.UH_core_LDAP.types = person


#Subject source type:
subjectApi.source.UH_core_LDAP.param.ldapServerId.value = personLdap
subjectApi.source.UH_core_LDAP.adapterClass = edu.internet2.middleware.grouper.subj.GrouperJndiSourceAdapter

#Attribute which is the subject id. Each subject has one and only one subject id.  Generally it is opaque and permanent.
subjectApi.source.UH_core_LDAP.param.SubjectID_AttributeType.value = uhuuid

# if the subject id should be changed to lower case after reading from datastore.  true or false
subjectApi.source.UH_core_LDAP.param.SubjectID_formatToLowerCase.value = false

# attribute which is the subject name
subjectApi.source.UH_core_LDAP.param.Name_AttributeType.value = cn

# attribute which is the subject description
subjectApi.source.UH_core_LDAP.param.Description_AttributeType.value = cn

# This virtual attribute index 0 is accessible via: subject.getAttributeValue("searchAttribute0");
subjectApi.source.UH_core_LDAP.param.subjectVirtualAttribute_0_searchAttribute0.value = ${subjectUtils.defaultIfBlank(subject.getAttributeValueOrCommaSeparated('uid'), "")},${subjectUtils.defaultIfBlank(subject.getAttributeValueOrCommaSeparated('cn'), "")},${subjectUtils.defaultIfBlank(subject.getAttributeValueOrCommaSeparated('uhuuid'), "")}

# the 1st sort attribute for lists on screen that are derived from member table (e.g. search for member in group)
# you can have up to 5 sort attributes 
subjectApi.source.UH_core_LDAP.param.sortAttribute0.value = cn

# the 1st search attribute for lists on screen that are derived from member table (e.g. search for member in group)
# you can have up to 5 search attributes 
subjectApi.source.UH_core_LDAP.param.searchAttribute0.value = searchAttribute0

#searchSubject: find a subject by ID.  ID is generally an opaque and permanent identifier, e.g. 12345678.
#  Each subject has one and only on ID.  Returns one result when searching for one ID.

# sql is the sql to search for the subject by id.  %TERM% will be subsituted by the id searched for
subjectApi.source.UH_core_LDAP.search.searchSubject.param.filter.value = (& (uhuuid=%TERM%) (objectclass=uhEduPerson))

# Scope Values can be: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE
subjectApi.source.UH_core_LDAP.search.searchSubject.param.scope.value = SUBTREE_SCOPE

# base dn to search in
subjectApi.source.UH_core_LDAP.search.searchSubject.param.base.value = dc=hawaii,dc=edu

#searchSubjectByIdentifier: find a subject by identifier.  Identifier is anything that uniquely
#  identifies the user, e.g. jsmith or jsmith@institution.edu.
#  Subjects can have multiple identifiers.  Note: it is nice to have if identifiers are unique
#  even across sources.  Returns one result when searching for one identifier.

# sql is the sql to search for the subject by identifier.  %TERM% will be subsituted by the identifier searched for
subjectApi.source.UH_core_LDAP.search.searchSubjectByIdentifier.param.filter.value = (& (uid=%TERM%) (objectclass=uhEduPerson))

# Scope Values can be: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE
subjectApi.source.UH_core_LDAP.search.searchSubjectByIdentifier.param.scope.value = SUBTREE_SCOPE

# base dn to search in
subjectApi.source.UH_core_LDAP.search.searchSubjectByIdentifier.param.base.value = dc=hawaii,dc=edu

#   search: find subjects by free form search.  Returns multiple results.

# sql is the sql to search for the subject by free form search.  %TERM% will be subsituted by the text searched for
subjectApi.source.UH_core_LDAP.search.search.param.filter.value = (& (|(uhuuid=%TERM%)(uid=%TERM%)(cn=%TERM%))(objectclass=uhEduPerson))

# Scope Values can be: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE
subjectApi.source.UH_core_LDAP.search.search.param.scope.value = SUBTREE_SCOPE

# base dn to search in
subjectApi.source.UH_core_LDAP.search.search.param.base.value = dc=hawaii,dc=edu

# attributes from ldap object to become subject attributes.  comma separated
subjectApi.source.UH_core_LDAP.attributes = uid, uhuuid, cn, sn, givenName

# internal attributes are used by grouper only not exposed to code that uses subjects.  comma separated
subjectApi.source.UH_core_LDAP.internalAttributes = searchAttribute0

